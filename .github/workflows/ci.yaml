name: ci

on:
  pull_request:
  push:
    branches:
      - main

permissions: {}

jobs:
  ansible-lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - uses: ansible/ansible-lint@c16f018b1bdfdea6717f4b5b1b141a78b86021cd # v25.2.1

  flux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - uses: helm/kind-action@a1b0e391336a6ee6713a0583f8c6240d70863de3 # v1.12.0
      - uses: astral-sh/setup-uv@d4b2f3b6ecc6e67c4457f6d3e41ec42d3d0fcb86 # v5.4.2
      - run: uv run ansible-galaxy collection install ${{ github.workspace }}
      - run: |
          uv run ansible-playbook \
            --connection=local \
            --extra-vars target=localhost \
              atmosphere.common.flux
      - name: Wait flux deployment to be ready
        run: |
          uv run kubectl wait \
            --namespace flux-system \
            --for=condition=available \
            --timeout=5m \
            deployment/helm-controller \
            deployment/kustomize-controller \
            deployment/notification-controller \
            deployment/source-controller

  cert-manager:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - uses: helm/kind-action@a1b0e391336a6ee6713a0583f8c6240d70863de3 # v1.12.0
      - uses: astral-sh/setup-uv@d4b2f3b6ecc6e67c4457f6d3e41ec42d3d0fcb86 # v5.4.2
      - run: uv run ansible-galaxy collection install ${{ github.workspace }}
      - run: |
          uv run ansible-playbook \
            --connection=local \
            --extra-vars target=localhost \
              atmosphere.common.flux \
              atmosphere.common.cert_manager
      - name: Wait cert-manager HelmRelease to be ready
        run: |
          uv run kubectl wait \
            --namespace cert-manager \
            --for=condition=ready \
            --timeout=5m \
            helmrelease/cert-manager
      - name: Wait cert-manager deployment to be ready
        run: |
          uv run kubectl wait \
            --namespace cert-manager \
            --for=condition=available \
            --timeout=5m \
            deployment.apps/cert-manager \
            deployment.apps/cert-manager-cainjector \
            deployment.apps/cert-manager-webhook

  metal3:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - uses: helm/kind-action@a1b0e391336a6ee6713a0583f8c6240d70863de3 # v1.12.0
      - uses: astral-sh/setup-uv@d4b2f3b6ecc6e67c4457f6d3e41ec42d3d0fcb86 # v5.4.2
      - run: uv run ansible-galaxy collection install ${{ github.workspace }}
      - run: |
          uv run ansible-playbook \
            --connection=local \
            --extra-vars target=localhost \
            --extra-vars ironic_standalone_ip_address=172.18.0.2 \
            --extra-vars ironic_standalone_dhcp_cidr=172.18.0.0/24 \
            --extra-vars ironic_standalone_dhcp_range_start=172.18.0.10 \
            --extra-vars ironic_standalone_dhcp_range_end=172.18.0.20 \
              atmosphere.common.flux \
              atmosphere.common.cert_manager \
              atmosphere.common.metal3
      - name: Debug the Baremetal Operator
        run: |
          kubectl get all -n baremetal-operator-system
          for i in {1..10}; do
            kubectl logs -n baremetal-operator-system deployment.apps/baremetal-operator-controller-manager
            sleep 10
          done
      - name: Wait Baremetal Operator deployment to be ready
        run: |
          uv run kubectl wait \
            --namespace baremetal-operator-system \
            --for=condition=available \
            --timeout=5m \
            deployment.apps/baremetal-operator-controller-manager \
            deployment.apps/ironic-service
      - name: Wait Ironic Standalone Operator deployment to be ready
        run: |
          uv run kubectl wait \
            --namespace ironic-standalone-operator-system \
            --for=condition=available \
            --timeout=5m \
            deployment.apps/ironic-standalone-operator-controller-manager
